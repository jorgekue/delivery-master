name: Spring-Batch Activities Workflow
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      name:
        required: true
        type: string
      version:
        required: true
        type: string
      tags:
        required: false
        type: string

jobs:
  Spring-Batch-ReleaseBuild:
    if: ${{ ( contains(inputs.tags, 'DEPLOY') ) && ( contains(inputs.env, 'INT') || contains(inputs.env, 'HOT') ) }}
    runs-on: ubuntu-latest
    steps:
      - name: ReleaseBuild
        run: echo "ReleaseBuild with params (env=${{ inputs.env }}, name=${{ inputs.name }}, version=${{ inputs.version }})."
  Spring-Batch-CheckApprovalRepo:
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && ( contains(inputs.tags, 'DEPLOY') ) && ( contains(inputs.env, 'INT') || contains(inputs.env, 'HOT') ) }}
    needs: Spring-Batch-ReleaseBuild
    runs-on: ubuntu-latest
    steps:
      - name: CheckApprovalRepo
        run: echo "CheckApprovalRepo with params (env=${{ inputs.env }}, name=${{ inputs.name }}, version=${{ inputs.version }})."
  Spring-Batch-StageToProdRepo:
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && ( contains(inputs.tags, 'DEPLOY') ) && ( contains(inputs.env, 'PROD') ) }}
    needs: Spring-Batch-CheckApprovalRepo
    runs-on: ubuntu-latest
    steps:
      - name: StageToProdRepo
        run: echo "StageToProdRepo with params (env=${{ inputs.env }}, name=${{ inputs.name }}, version=${{ inputs.version }})."
  Spring-Batch-CheckProdRepo:
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && ( contains(inputs.tags, 'DEPLOY') ) && ( contains(inputs.env, 'PROD') ) }}
    needs: Spring-Batch-StageToProdRepo
    runs-on: ubuntu-latest
    steps:
      - name: CheckProdRepo
        run: echo "CheckProdRepo with params (env=${{ inputs.env }}, name=${{ inputs.name }}, version=${{ inputs.version }})."
  Spring-Batch-DeployArtifact:
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && ( contains(inputs.tags, 'DEPLOY') || contains(inputs.tags, 'CONFIG') ) && ( contains(inputs.env, 'INT') || contains(inputs.env, 'FUNC') || contains(inputs.env, 'PRE') || contains(inputs.env, 'HOT') || contains(inputs.env, 'PROD') ) }}
    needs: Spring-Batch-CheckProdRepo
    runs-on: ubuntu-latest
    steps:
      - name: DeployArtifact
        run: echo "DeployArtifact with params (env=${{ inputs.env }}, name=${{ inputs.name }}, version=${{ inputs.version }})."
